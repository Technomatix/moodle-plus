---
- hosts: all

  vars:
    dbpw: "Wibble123!"
    dot_bashrc: "/home/vagrant/.bashrc"
    php_ini: "/etc/php/5.6/fpm/php.ini"

  pre_tasks:
    - name: Timestamp provision
      shell: date >> /etc/vagrant_provisioned_at
      args:
        executable: /bin/bash
      changed_when: False
      become: true

    - name: Update apt cache
      apt: update_cache=yes cache_valid_time=3600
      become: true

  tasks:
    - name: Add PHP 5.6 apt repository
      apt_repository:
        repo: 'ppa:ondrej/php'
      become: true

    - name: Update apt cache
      apt:
        update_cache: yes
      become: true

    - name: Install apt packages
      apt: name={{ item }} state=present
      with_items:
        - git
        - htop
        - vim
        - postgresql
        - postgresql-server-dev-9.3
        - nginx
        - python-software-properties
        - python-psycopg2
        - php5.6-cli
        - php5.6-curl
        - php5.6-fpm
        - php5.6-gd
        - php5.6-intl
        - php5.6-mbstring
        - php5.6-pgsql
        - php5.6-soap
        - php5.6-xdebug
        - php5.6-xml
        - php5.6-xmlrpc
        - php5.6-zip
      become: true

    - name: Set PostgreSQL database password
      command: psql -U postgres -d postgres -c "alter user postgres with password '{{ dbpw }}';"
      become: true
      become_user: postgres
      changed_when: False

    - name: Protect .pgpass
      file: path=/home/vagrant/.pgpass mode=0600 state=file

    - name: Create moodle database
      postgresql_db:
        name: moodle
      become: true
      become_user: postgres

    - name: Enable colour prompt in bash
      replace: dest={{ dot_bashrc }} regexp="^\#force_color_prompt\=yes$" replace="force_color_prompt=yes"

    - name: Template nginx server block
      template:
        src: nginx-server-block
        dest: /etc/nginx/sites-available/default
        owner: bin
        group: root
        mode: 0644
      become: true

    - name: Enable Xdebug
      ini_file: dest={{ php_ini }}
                section=xdebug option={{ item.key }}
                value={{ item.value }}
                state=present
                backup=yes
      with_items:
        - { key: "xdebug.remote_enable", value: "on" }
        - { key: "xdebug.remote_connect_back", value: "on" }
      become: true

    - name: Set session save location
      ini_file: dest={{ php_ini }}
                section=Session option={{ item.key }}
                value={{ item.value }}
                state=present
                backup=yes
      with_items:
        - { key: "session.save_path", value: "\"/tmp/\"" }
      become: true

    - name: Restart services
      service: name={{ item }} state=restarted
      with_items:
        - postgresql
        - nginx
        - php5.6-fpm
      become: true
